# generated by 'rake generate'
require 'cocoa/bindings/NSObject'
module Cocoa
  class NSRegularExpression < Cocoa::NSObject
    attach_method :enumerateMatchesInString, :args=>4, :names=>["options", "range", "usingBlock"], :types=>["@", "Q", "{_NSRange=QQ}", "@?"], :retval=>"v"
    attach_singular_method :escapedPatternForString, :args=>1, :names=>[], :types=>["@"], :retval=>"@"
    attach_singular_method :escapedTemplateForString, :args=>1, :names=>[], :types=>["@"], :retval=>"@"
    attach_method :firstMatchInString, :args=>3, :names=>["options", "range"], :types=>["@", "Q", "{_NSRange=QQ}"], :retval=>"@"
    attach_method :initWithPattern, :args=>3, :names=>["options", "error"], :types=>["@", "Q", "^@"], :retval=>"@"
    attach_method :matchesInString, :args=>3, :names=>["options", "range"], :types=>["@", "Q", "{_NSRange=QQ}"], :retval=>"@"
    attach_method :numberOfCaptureGroups, :args=>0, :names=>[], :types=>[], :retval=>"Q"
    attach_method :numberOfMatchesInString, :args=>3, :names=>["options", "range"], :types=>["@", "Q", "{_NSRange=QQ}"], :retval=>"Q"
    attach_method :options, :args=>0, :names=>[], :types=>[], :retval=>"Q"
    attach_method :pattern, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_method :rangeOfFirstMatchInString, :args=>3, :names=>["options", "range"], :types=>["@", "Q", "{_NSRange=QQ}"], :retval=>"{_NSRange=QQ}"
    attach_singular_method :regularExpressionWithPattern, :args=>3, :names=>["options", "error"], :types=>["@", "Q", "^@"], :retval=>"@"
    attach_method :replaceMatchesInString, :args=>4, :names=>["options", "range", "withTemplate"], :types=>["@", "Q", "{_NSRange=QQ}", "@"], :retval=>"Q"
    attach_method :replacementStringForResult, :args=>4, :names=>["inString", "offset", "template"], :types=>["@", "@", "q", "@"], :retval=>"@"
    attach_method :stringByReplacingMatchesInString, :args=>4, :names=>["options", "range", "withTemplate"], :types=>["@", "Q", "{_NSRange=QQ}", "@"], :retval=>"@"
  end
end
