# generated by 'rake generate'
require 'cocoa/bindings/NSObject'
module Cocoa
  class NSUndoManager < Cocoa::NSObject
    attach_method :beginUndoGrouping, :args=>0, :names=>[], :types=>[], :retval=>"v"
    attach_method :canRedo, :args=>0, :names=>[], :types=>[], :retval=>"B"
    attach_method :canUndo, :args=>0, :names=>[], :types=>[], :retval=>"B"
    attach_method :disableUndoRegistration, :args=>0, :names=>[], :types=>[], :retval=>"v"
    attach_method :enableUndoRegistration, :args=>0, :names=>[], :types=>[], :retval=>"v"
    attach_method :endUndoGrouping, :args=>0, :names=>[], :types=>[], :retval=>"v"
    attach_method :groupingLevel, :args=>0, :names=>[], :types=>[], :retval=>"q"
    attach_method :groupsByEvent, :args=>0, :names=>[], :types=>[], :retval=>"B"
    attach_method :isRedoing, :args=>0, :names=>[], :types=>[], :retval=>"B"
    attach_method :isUndoRegistrationEnabled, :args=>0, :names=>[], :types=>[], :retval=>"B"
    attach_method :isUndoing, :args=>0, :names=>[], :types=>[], :retval=>"B"
    attach_method :levelsOfUndo, :args=>0, :names=>[], :types=>[], :retval=>"Q"
    attach_method :prepareWithInvocationTarget, :args=>1, :names=>[], :types=>["@"], :retval=>"@"
    attach_method :redo, :args=>0, :names=>[], :types=>[], :retval=>"v"
    attach_method :redoActionIsDiscardable, :args=>0, :names=>[], :types=>[], :retval=>"B"
    attach_method :redoActionName, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_method :redoMenuItemTitle, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_method :redoMenuTitleForUndoActionName, :args=>1, :names=>[], :types=>["@"], :retval=>"@"
    attach_method :registerUndoWithTarget, :args=>3, :names=>[:selector, :object], :types=>["@", ":", "@"], :retval=>"v"
    attach_method :removeAllActions, :args=>0, :names=>[], :types=>[], :retval=>"v"
    attach_method :removeAllActionsWithTarget, :args=>1, :names=>[], :types=>["@"], :retval=>"v"
    attach_method :runLoopModes, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_method :setActionIsDiscardable, :args=>1, :names=>[], :types=>["B"], :retval=>"v"
    attach_method :setActionName, :args=>1, :names=>[], :types=>["@"], :retval=>"v"
    attach_method :setGroupsByEvent, :args=>1, :names=>[], :types=>["B"], :retval=>"v"
    attach_method :setLevelsOfUndo, :args=>1, :names=>[], :types=>["Q"], :retval=>"v"
    attach_method :setRunLoopModes, :args=>1, :names=>[], :types=>["@"], :retval=>"v"
    attach_method :undo, :args=>0, :names=>[], :types=>[], :retval=>"v"
    attach_method :undoActionIsDiscardable, :args=>0, :names=>[], :types=>[], :retval=>"B"
    attach_method :undoActionName, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_method :undoMenuItemTitle, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_method :undoMenuTitleForUndoActionName, :args=>1, :names=>[], :types=>["@"], :retval=>"@"
    attach_method :undoNestedGroup, :args=>0, :names=>[], :types=>[], :retval=>"v"
  end
end
