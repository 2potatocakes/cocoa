# generated by 'rake generate'
require 'cocoa/bindings/NSObject'
module Cocoa
  class NSManagedObject < Cocoa::NSObject
    attach_method :awakeFromFetch, :args=>0, :names=>[], :types=>[], :retval=>"v"
    attach_method :awakeFromInsert, :args=>0, :names=>[], :types=>[], :retval=>"v"
    attach_method :awakeFromSnapshotEvents, :args=>1, :names=>[], :types=>["Q"], :retval=>"v"
    attach_method :changedValues, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_method :changedValuesForCurrentEvent, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_method :committedValuesForKeys, :args=>1, :names=>[], :types=>["@"], :retval=>"@"
    attach_singular_method :contextShouldIgnoreUnmodeledPropertyChanges, :args=>0, :names=>[], :types=>[], :retval=>"B"
    attach_method :didAccessValueForKey, :args=>1, :names=>[], :types=>["@"], :retval=>"v"
    attach_method :didChangeValueForKey, [{:args=>1, :names=>[], :types=>["@"], :retval=>"v"}, {:args=>3, :names=>[:withSetMutation, :usingObjects], :types=>["@", "Q", "@"], :retval=>"v"}]
    attach_method :didSave, :args=>0, :names=>[], :types=>[], :retval=>"v"
    attach_method :didTurnIntoFault, :args=>0, :names=>[], :types=>[], :retval=>"v"
    attach_method :entity, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_method :faultingState, :args=>0, :names=>[], :types=>[], :retval=>"Q"
    attach_method :hasChanges, :args=>0, :names=>[], :types=>[], :retval=>"B"
    attach_method :hasFaultForRelationshipNamed, :args=>1, :names=>[], :types=>["@"], :retval=>"B"
    attach_method :initWithEntity, :args=>2, :names=>[:insertIntoManagedObjectContext], :types=>["@", "@"], :retval=>"@"
    attach_method :isDeleted, :args=>0, :names=>[], :types=>[], :retval=>"B"
    attach_method :isFault, :args=>0, :names=>[], :types=>[], :retval=>"B"
    attach_method :isInserted, :args=>0, :names=>[], :types=>[], :retval=>"B"
    attach_method :isUpdated, :args=>0, :names=>[], :types=>[], :retval=>"B"
    attach_method :managedObjectContext, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_method :objectID, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_method :observationInfo, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_method :prepareForDeletion, :args=>0, :names=>[], :types=>[], :retval=>"v"
    attach_method :primitiveValueForKey, :args=>1, :names=>[], :types=>["@"], :retval=>"@"
    attach_method :setObservationInfo, :args=>1, :names=>[], :types=>["@"], :retval=>"v"
    attach_method :setPrimitiveValue, :args=>2, :names=>[:forKey], :types=>["@", "@"], :retval=>"v"
    attach_method :setValue, :args=>2, :names=>[:forKey], :types=>["@", "@"], :retval=>"v"
    attach_method :validateForDelete, :args=>1, :names=>[], :types=>["^@"], :retval=>"B"
    attach_method :validateForInsert, :args=>1, :names=>[], :types=>["^@"], :retval=>"B"
    attach_method :validateForUpdate, :args=>1, :names=>[], :types=>["^@"], :retval=>"B"
    attach_method :validateValue, :args=>3, :names=>[:forKey, :error], :types=>["^@", "@", "^@"], :retval=>"B"
    attach_method :valueForKey, :args=>1, :names=>[], :types=>["@"], :retval=>"@"
    attach_method :willAccessValueForKey, :args=>1, :names=>[], :types=>["@"], :retval=>"v"
    attach_method :willChangeValueForKey, [{:args=>1, :names=>[], :types=>["@"], :retval=>"v"}, {:args=>3, :names=>[:withSetMutation, :usingObjects], :types=>["@", "Q", "@"], :retval=>"v"}]
    attach_method :willSave, :args=>0, :names=>[], :types=>[], :retval=>"v"
    attach_method :willTurnIntoFault, :args=>0, :names=>[], :types=>[], :retval=>"v"
  end
end
