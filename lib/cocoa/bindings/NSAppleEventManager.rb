# generated by 'rake generate'
require 'cocoa/bindings/NSObject'
module Cocoa
  class NSAppleEventManager < Cocoa::NSObject
    attach_method :appleEventForSuspensionID, :args=>1, :names=>[], :types=>["^{__NSAppleEventManagerSuspension=}"], :retval=>"@"
    attach_method :currentAppleEvent, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_method :currentReplyAppleEvent, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_method :dispatchRawAppleEvent, :args=>3, :names=>[:withRawReply, :handlerRefCon], :types=>["^{AEDesc=I^^{OpaqueAEDataStorageType}}", "^{AEDesc=I^^{OpaqueAEDataStorageType}}", "^v"], :retval=>"s"
    attach_method :removeEventHandlerForEventClass, :args=>2, :names=>[:andEventID], :types=>["I", "I"], :retval=>"v"
    attach_method :replyAppleEventForSuspensionID, :args=>1, :names=>[], :types=>["^{__NSAppleEventManagerSuspension=}"], :retval=>"@"
    attach_method :resumeWithSuspensionID, :args=>1, :names=>[], :types=>["^{__NSAppleEventManagerSuspension=}"], :retval=>"v"
    attach_method :setCurrentAppleEventAndReplyEventWithSuspensionID, :args=>1, :names=>[], :types=>["^{__NSAppleEventManagerSuspension=}"], :retval=>"v"
    attach_method :setEventHandler, :args=>4, :names=>[:andSelector, :forEventClass, :andEventID], :types=>["@", ":", "I", "I"], :retval=>"v"
    attach_singular_method :sharedAppleEventManager, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_method :suspendCurrentAppleEvent, :args=>0, :names=>[], :types=>[], :retval=>"^{__NSAppleEventManagerSuspension=}"
  end
end
