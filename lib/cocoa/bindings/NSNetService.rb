# generated by 'rake generate'
require 'cocoa/bindings/NSObject'
module Cocoa
  class NSNetService < Cocoa::NSObject
    attach_method :TXTRecordData, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_method :addresses, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_singular_method :dataFromTXTRecordDictionary, :args=>1, :names=>[], :types=>["@"], :retval=>"@"
    attach_method :delegate, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_singular_method :dictionaryFromTXTRecordData, :args=>1, :names=>[], :types=>["@"], :retval=>"@"
    attach_method :domain, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_method :getInputStream, :args=>2, :names=>[:outputStream], :types=>["^@", "^@"], :retval=>"B"
    attach_method :hostName, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_method :initWithDomain, [{:args=>3, :names=>[:type, :name], :types=>["@", "@", "@"], :retval=>"@"}, {:args=>4, :names=>[:type, :name, :port], :types=>["@", "@", "@", "i"], :retval=>"@"}]
    attach_method :name, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_method :port, :args=>0, :names=>[], :types=>[], :retval=>"q"
    attach_method :protocolSpecificInformation, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_method :publish, :args=>0, :names=>[], :types=>[], :retval=>"v"
    attach_method :publishWithOptions, :args=>1, :names=>[], :types=>["Q"], :retval=>"v"
    attach_method :removeFromRunLoop, :args=>2, :names=>[:forMode], :types=>["@", "@"], :retval=>"v"
    attach_method :resolve, :args=>0, :names=>[], :types=>[], :retval=>"v"
    attach_method :resolveWithTimeout, :args=>1, :names=>[], :types=>["d"], :retval=>"v"
    attach_method :scheduleInRunLoop, :args=>2, :names=>[:forMode], :types=>["@", "@"], :retval=>"v"
    attach_method :setDelegate, :args=>1, :names=>[], :types=>["@"], :retval=>"v"
    attach_method :setProtocolSpecificInformation, :args=>1, :names=>[], :types=>["@"], :retval=>"v"
    attach_method :setTXTRecordData, :args=>1, :names=>[], :types=>["@"], :retval=>"B"
    attach_method :startMonitoring, :args=>0, :names=>[], :types=>[], :retval=>"v"
    attach_method :stop, :args=>0, :names=>[], :types=>[], :retval=>"v"
    attach_method :stopMonitoring, :args=>0, :names=>[], :types=>[], :retval=>"v"
    attach_method :type, :args=>0, :names=>[], :types=>[], :retval=>"@"
  end
end
