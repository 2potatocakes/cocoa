# generated by 'rake generate'
require 'cocoa/bindings/NSNumber'
module Cocoa
  class NSDecimalNumber < Cocoa::NSNumber
    attach_method :compare, :args=>1, :names=>[], :types=>["@"], :retval=>"q"
    attach_method :decimalNumberByAdding, [{:args=>1, :names=>[], :types=>["@"], :retval=>"@"}, {:args=>2, :names=>["withBehavior"], :types=>["@", "@"], :retval=>"@"}]
    attach_method :decimalNumberByDividingBy, [{:args=>1, :names=>[], :types=>["@"], :retval=>"@"}, {:args=>2, :names=>["withBehavior"], :types=>["@", "@"], :retval=>"@"}]
    attach_method :decimalNumberByMultiplyingBy, [{:args=>1, :names=>[], :types=>["@"], :retval=>"@"}, {:args=>2, :names=>["withBehavior"], :types=>["@", "@"], :retval=>"@"}]
    attach_method :decimalNumberByMultiplyingByPowerOf10, [{:args=>1, :names=>[], :types=>["s"], :retval=>"@"}, {:args=>2, :names=>["withBehavior"], :types=>["s", "@"], :retval=>"@"}]
    attach_method :decimalNumberByRaisingToPower, [{:args=>1, :names=>[], :types=>["Q"], :retval=>"@"}, {:args=>2, :names=>["withBehavior"], :types=>["Q", "@"], :retval=>"@"}]
    attach_method :decimalNumberByRoundingAccordingToBehavior, :args=>1, :names=>[], :types=>["@"], :retval=>"@"
    attach_method :decimalNumberBySubtracting, [{:args=>1, :names=>[], :types=>["@"], :retval=>"@"}, {:args=>2, :names=>["withBehavior"], :types=>["@", "@"], :retval=>"@"}]
    attach_singular_method :decimalNumberWithDecimal, :args=>1, :names=>[], :types=>["{_NSDecimal=b8b4b1b1b18[8S]}"], :retval=>"@"
    attach_singular_method :decimalNumberWithMantissa, :args=>3, :names=>["exponent", "isNegative"], :types=>["Q", "s", "B"], :retval=>"@"
    attach_singular_method :decimalNumberWithString, [{:args=>1, :names=>[], :types=>["@"], :retval=>"@"}, {:args=>2, :names=>["locale"], :types=>["@", "@"], :retval=>"@"}]
    attach_method :decimalValue, :args=>0, :names=>[], :types=>[], :retval=>"{_NSDecimal=b8b4b1b1b18[8S]}"
    attach_singular_method :defaultBehavior, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_method :descriptionWithLocale, :args=>1, :names=>[], :types=>["@"], :retval=>"@"
    attach_method :doubleValue, :args=>0, :names=>[], :types=>[], :retval=>"d"
    attach_method :initWithDecimal, :args=>1, :names=>[], :types=>["{_NSDecimal=b8b4b1b1b18[8S]}"], :retval=>"@"
    attach_method :initWithMantissa, :args=>3, :names=>["exponent", "isNegative"], :types=>["Q", "s", "B"], :retval=>"@"
    attach_method :initWithString, [{:args=>1, :names=>[], :types=>["@"], :retval=>"@"}, {:args=>2, :names=>["locale"], :types=>["@", "@"], :retval=>"@"}]
    attach_singular_method :maximumDecimalNumber, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_singular_method :minimumDecimalNumber, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_singular_method :notANumber, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_method :objCType, :args=>0, :names=>[], :types=>[], :retval=>"*"
    attach_singular_method :one, :args=>0, :names=>[], :types=>[], :retval=>"@"
    attach_singular_method :setDefaultBehavior, :args=>1, :names=>[], :types=>["@"], :retval=>"v"
    attach_singular_method :zero, :args=>0, :names=>[], :types=>[], :retval=>"@"
  end
end
